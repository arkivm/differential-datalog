import d3_application
import display

// the path here should actually be an executable, or I suppose a url to one.
// but here we may be able to use the value of argv[0] to make it
// slightly less broken
Process(loc, "/Users/ehoffman/ddev/rust/template/d3log/examples/mini_skyline_ddlog/target/debug/mini_skyline_cli", true) :-
             Clock(t),
             var now = t.group_by(()).max(),
             Schedule(loc, born, dies),
             born <= now,
             dies >= now,             
             Fact(_, loc).

Schedule(1, 0, 100).
Schedule(2, 0, 5).
Schedule(3, 8, 100).
Schedule(4, 0, 100).

             
input relation Fact(x:u64, k:u128)
output relation Anchor(x:u64)
relation PrintMSResult(x:u64, me:D3logLocationId)
relation MSResult(x:u64, me:D3logLocationId)
relation LocalizedFact(x:u64)
relation Schedule(node:u128, born:u64, dies:u64)
relation Dist(n:Vec<D3logLocationId>)

Dist(ws) :-
  Process(loc, _, _),
  var ws:Vec<D3logLocationId> = loc.group_by(()).to_vec().

LocalizedFact(x)@n:-
      Fact(x, key),
      Dist(ws),
      var n = ws.nth(((key as u64) % ws.len()) as u64).unwrap_or_default().

MSResult(x, y) :- LocalizedFact(x),
                  Myself(y).

PrintMSResult(x, y)@n :-
                   Stdout(n),
                   MSResult(x, y).

Anchor(x) :- PrintMSResult(x, _).



